/*
A Flexible Replication-Based Classification Approach for Parkinson's Disease Detection by Using Voice Recordings
 
Lizbeth Naranjo, Ruth Fuentes-Garcia, Carlos J. Perez.

33rd National Forum of Statistics (FNE) and 13th Latin-American Congress of Statistical Societies (CLATSE)
Springer Proceedings in Mathematics & Statistics
*/
 
model{

### TRAINING
	for(i in 1:N){
		Y[i] ~ dbern(P[i])
		logit(P[i]) <- Beta%*%W[i,] + Gsex*Z[i] + Gintercept

		for(k in 1:10){
			for(j in 1:3){
				X[i,j,k] ~ dnorm( W[i,k] , sigmaX[k] ) 
			}
			W[i,k] ~ dnorm( muW[i,k], tauW[i,k] )
			muW[i,k] <- muWclust[ k, clust[i,k] ]
			tauW[i,k] <- tauWclust[ k, clust[i,k] ] 
			clust[i,k] ~ dcat( qClust[k,1:3] )
		}
	}	

### TESTING
	for(i in 1:N.new){
		Y.new[i] ~ dbern(P.new[i])
		logit(P.new[i]) <- Beta%*%W.new[i,] + Gsex*Z.new[i] + Gintercept

		for(k in 1:10){
			for(j in 1:3){
				X.new[i,j,k] ~ dnorm( W.new[i,k] , sigmaX[k] ) 
			}
			W.new[i,k] ~ dnorm( muW.new[i,k], tauW.new[i,k] )
			muW.new[i,k] <- muWclust[ k, clust.new[i,k] ]
			tauW.new[i,k] <- tauWclust[ k, clust.new[i,k] ] 
			clust.new[i,k] ~ dcat( qClust[k,1:3] )
		}
	}	


### PRIOR
	Gintercept ~ dnorm(0,0.01)
	Gsex ~ dnorm(0,0.01)

	for (k in 1:10){
		Beta[k] ~ dnorm(0,0.01)
		sigmaX[k] ~ dgamma(0.01, 0.01)

		qClust[k,1:3] ~ ddirch(alpha[k,1:3])

		muWclust00[k,1] ~ dnorm(Xmid[k], 1/R2[k])
		muWclust00[k,2] ~ dnorm(Xmid[k], 1/R2[k])
		muWclust00[k,3] ~ dnorm(Xmid[k], 1/R2[k])
		
		tauWclust[k,1] ~ dgamma(2,lambda[k,1])
		tauWclust[k,2] ~ dgamma(2,lambda[k,2])
		tauWclust[k,3] ~ dgamma(2,lambda[k,3])
		lambda[k,1] ~ dgamma(0.5,10/R2[k])
		lambda[k,2] ~ dgamma(0.5,10/R2[k])
		lambda[k,3] ~ dgamma(0.5,10/R2[k])
	}

### Jitter: 1 components 
	alpha[1,1] <- 2
	alpha[1,2] <- 0
	alpha[1,3] <- 0
	muWclust[1,1] <- muWclust00[1,1]
	muWclust[1,2:3] <- muWclust00[1,2:3]

### Shimmer: 3 components 
	alpha[2,1] <- 2
	alpha[2,2] <- 2
	alpha[2,3] <- 2
	muWclust[2,1:3] <- sort(muWclust00[2,1:3])

### HNR: 1 components 
	alpha[3,1] <- 2
	alpha[3,2] <- 0
	alpha[3,3] <- 0
	muWclust[3,1] <- muWclust00[3,1]
	muWclust[3,2:3] <- muWclust00[3,2:3]


### MFCC Delta 1: 1 components
	alpha[4,1] <- 2
	alpha[4,2] <- 0
	alpha[4,3] <- 0
	muWclust[4,1] <- muWclust00[4,1]
	muWclust[4,2:3] <- muWclust00[4,2:3]

### MFCC Detla 2: 2 components
	alpha[5,1] <- 2
	alpha[5,2] <- 2
	alpha[5,3] <- 0
	muWclust[5,1:2] <- sort(muWclust00[5,1:2])
	muWclust[5,3] <- muWclust00[5,3]

### MFCC Delta 3: 1 components 
	alpha[6,1] <- 2
	alpha[6,2] <- 0
	alpha[6,3] <- 0
	muWclust[6,1] <- muWclust00[6,1]
	muWclust[6,2:3] <- muWclust00[6,2:3]

### RPDE: 1 mcomponents
	alpha[7,1] <- 2
	alpha[7,2] <- 0
	alpha[7,3] <- 0
	muWclust[7,1] <- muWclust00[7,1]
	muWclust[7,2:3] <- muWclust00[7,2:3]

### DFA: 1 components
	alpha[8,1] <- 2
	alpha[8,2] <- 0
	alpha[8,3] <- 0
	muWclust[8,1] <- muWclust00[8,1]
	muWclust[8,2:3] <- muWclust00[8,2:3]

### PPE: 3 components 
	alpha[9,1] <- 2
	alpha[9,2] <- 2
	alpha[9,3] <- 2
	muWclust[9,1:3] <- sort(muWclust00[9,1:3])

### GNE: 3 components
	alpha[10,1] <- 2
	alpha[10,2] <- 2
	alpha[10,3] <- 2
	muWclust[10,1:3] <- sort(muWclust00[10,1:3])
 
}

